source s_network_ietf_syslog{
    syslog(
        ip("0.0.0.0")
        port(6514)
        transport("tcp")
        log-fetch-limit(200)
        max-connections(50)
        log-iw-size(200)
        keep-hostname(yes)
    );

#    syslog(
#        ip("`wan_ip`")
#        port(6514)
#        transport("tls")
#        log-fetch-limit(250)
#        max-connections(200)
#        tls(
#            ca-dir("/etc/syslog-ng/ssl/ca.d")
#            key-file("/etc/syslog-ng/key.d/example.org.key")
#            cert-file("/etc/syslog-ng/cert.d/example.org.crt")
#            peer-verify("optional-untrusted")
#        )
#    );
};

source s_network_bsd_syslog{
    network(
        ip("0.0.0.0")
        port(514)
        transport("tcp")
        log-fetch-limit(250)
        log-iw-size(2000)
        max-connections(200)
        so-keepalive(yes)
    );
};

destination d_network{
    file(
        "/var/log/network/$HOST/$S_YEAR.$S_MONTH.$S_DAY/messages"
        create-dirs(yes)
    );
};

destination d_network_debug{
    file(
        "/var/log/network/$HOST/$S_YEAR.$S_MONTH.$S_DAY/messages.json"
        template("$(template t_network)")
        create-dirs(yes)
    );
};

filter f_remove_already_processed {
    not (program('ulogd') or program('unbound'))
};

log {
    source(s_network_ietf_syslog);
    source(s_network_bsd_syslog);

    if (filter(f_ulogd_stat)) {
        destination(d_network_ulogd);
        flags(final);
    }
    elif (filter(f_fail2ban_stat)){
        destination(d_network_fail2ban);
        flags(final);
    }
    #elif (filter(f_dnsmasq_query)){
    #    destination(d_network_dnsmasq);
    #    flags(final);
    #};
    elif (filter(f_unbound_stat)){
        destination(d_network_unbound);
        flags(final);
    };

    filter(f_remove_already_processed);
    destination(d_network);

};
